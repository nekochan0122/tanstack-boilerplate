generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

model User {
  id            String         @id @default(uuid())
  name          String
  username      String         @unique
  email         String         @unique
  emailVerified Boolean        @default(false)
  role          Role           @default(User)
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  sessions      Session[]
  accounts      Account[]
  verifications Verification[]
  preference    Preference?
}

model Session {
  id        String   @id
  userId    String
  userAgent String?
  ipAddress String?
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id             String   @id @default(uuid())
  userId         String
  accountId      String
  providerId     String
  providerUser   String
  hashedPassword String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Verification {
  id        String   @id @default(uuid())
  userId    String
  type      String
  code      String
  email     String
  attempts  Int      @default(0)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Preference {
  id        String   @id @default(uuid())
  userId    String   @unique
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
